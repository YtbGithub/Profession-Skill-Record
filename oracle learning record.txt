1.DBMS & RDBMS(database manage system)
	1)DBMS
		内核代码，管理DBMS的存储和管理
		元数据存储库，常称为数据字典
		查询语言，这种语言使应用程序能够访问数据
	2)RDBMS
		基于DBMS增加了relation，也就是关系
		逻辑操作，这种情况下，应用程序指定需要什么内容；例如应用程序请求员工姓名 或者 将员工记录添加到表中
		物理操作，这种情况下，RDBMS确定事情应该 如何完成并执行操作；例如应用程序查询表后，数据库可能会使用索引来查找请求的行，将数据读入内存，并在将结果返回给用户之前执行许多其他步骤。RDBMS的存储和检索数据，以便于物理操作对数据库应用程序是透明的。

2.模式对象
	1)表，表格描述了一个实体
	2)索引，索引可以提高数据检索的性能，索引在逻辑上和物理上独立于数据。因此可以删除或创建索引且不会影响其他索引。

3.数据访问
	1)SQL(structured query language)结构化查询语言，以此来沟通数据库

4.事务管理(Transaction Management)
	一次事务是包含一条或多条sql语句的逻辑原子工作单元，即要么全部提交，要么全部回滚。据官方解释，是为了保持多用户操作和数据一致性。

5.数据并发
	1)多用户的RDBMS的一个要求是数据并发的控制，即多个用户访问相同数据。
	2)行级锁，机制简述：
		1>当修改数据时才会锁定行：通过行级别锁定表数据
		2>一行写入器会阻塞同一行的并发写入器：只会为该行获取锁，保证不被其他事务修改 （tips：可以效仿这种观念）
		3>读取从不会锁定写入器：但命令SELECT ... FOR UPDATE 会锁定正在读取的行
		4>写入器从不会锁定读取：当写入器更改一行时，数据库使用撤销数据为读取操作提供这一行的试图，即看到修改前的数据
	
6.数据一致性
	为了防止数据不一致而出现脏读，所以每次查询的结果都会是距离现在最近的一次成功提交后的数据，来保持返回数据的一致性。
	数据库还可以为事务中(ing)的所有查询提供读一致性，称为事务级读一致性。在这种情况下，事务中的每个语句都会看到来自同一时间点的数据，也就是事务开始的时间。
	
7.Oracle数据访问
	1)sql分类
		1>数据定义语言(DDL, data definition language)
		2>数据处理语言(DML, data manipulation language)
		3>事务控制语句(Transaction control statements)
		4>会话控制语句(Session control statements)
		5>系统控制语句(System control statements)
		6>嵌入式SQL语句(Embedded SQL statements)
	2)sql在程序中称为对象关系映射(ORM,object relational mapping)
		
	数据库
		增：create database database_name;
		
		删: drop database database_name;
		
		改:	None
		
		查:	show databases;
		
	表操作
		表结构: desc table_name; OR describe table_name;

		增：create table table_name(
				column_name type(length) 约束,
				column_name type(length) 约束
			);
			
		删: drop table table_name;
		
		改: alter table table_name [add/change/modify] column_name;
			example:alter table table_name add column_name type(length);
			example:alter table table_name change column_name new_column_name type(length);
		
		查: select ...
8.表压缩：
	基于表压缩
	高级行压缩
9.Tips
	1)如果表的某一列，类型为long，那么Oracle会把它放在最后一列，当然如果新增一列，新增的列则会在会后一列。
	2)连接oracle出错，检查一下是不是没有客户端在本地，oracle需要本地有客户端
		django中出错下载：https://www.oracle.com/database/technologies/instant-client.html，解压到当前虚拟环境的Lib/site-packages
		navicat中连接不上:把下载的压缩包中oci.dll在navicat工具-选项-环境-OCI环境中选定
	3)Oracle里面没有limit
	4)Oracle里面join不提示，但可以正常用
	5)mysql允许远程连接
		use mysql;
		select host, user, authentication_string, plugin from user;
		update user set host='%' where user='root';
		flush privileges;刷新权限
		⭐如果出错，检查是否是plugin字段和其他字段不一样，这个是个加密字段，需要更改一下
			ALTER USER 'test'@'%' IDENTIFIED BY '123456' PASSWORD EXPIRE NEVER; 修改加密规则
			ALTER USER 'test'@'%' IDENTIFIED WITH mysql_native_password BY '123456';按照mysql_native_password来加密这个123456
			flush privileges;刷新权限
		完工！
		GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'WITH GRANT OPTION;
	6)时间操作
		1)DATEDIFF时间差 
			datediff(now(), option_date) => get a positive number
			datediff(option_date, now()) => get a negative number
		2)DATEPART 时间的一部分
			年			yy, yyyy
			季度		qq, q
			月			mm, m
			年中的日	dy, y
			日			dd, d
			周			wk, ww
			星期		dw, w
			小时		hh
			分钟		mi, n
			秒			ss, s
			毫秒		ms
			微妙		mcs
			纳秒		ns
			datepart(yy, now()) => now()当前时间获取年-月-日 时:分:秒，yy就截取了年
			但是说是什么server function 所以目前不知道怎么使用
	7.修改数据库的时区为中国时间
		查询当前数据库时区：select dbtimezone from dual;
		查询当前会话时区：select sessiontimezone from dual;
		修改数据库的时区：alter database set time_zone='+08:00';
		修改当前会话的时区：alter session set time_zone='+08:00';
		重启数据库：SQL> shutdown immediate; SQL> startup